# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy-environment:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Destroy environment on fail
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID:0:7}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create CloudFormation stack
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name infrastack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-2

  create-production-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create CloudFormation stack in production
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name prod-${CIRCLE_WORKFLOW_ID:0:7} \
            --region us-east-2

  configure-infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["59:5b:97:8f:f8:1c:10:c6:f4:54:bb:b0:c6:6d:74:09"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory main_remote.yml

  perform-smoke-test:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - run: apk add --update curl
      - run:
          name: Run smoke test
          command: |
            URL="www.google.com"
            if curl -s --head ${URL}
            then return 0
            else return 1
            fi

  production-smoke-test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test production job
          command: return 1 # Simulating error
      - destroy-environment



# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  deployment-workflow:
    jobs:
      #- create-infrastructure
      #- configure-infrastructure
      #- perform-smoke-test
      - create-production-infrastructure
      - production-smoke-test:
          requires: [create-production-infrastructure]
